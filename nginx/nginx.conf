

worker_processes auto;

error_log /nginx_tmp/error.log;

events {

    worker_connections 1024;

}

pid /nginx_tmp/nginx.pid;

http {

  client_body_temp_path /nginx_tmp/client_body;
  fastcgi_temp_path /nginx_tmp/fastcgi;
  proxy_temp_path /nginx_tmp/proxy;
  scgi_temp_path /nginx_tmp/scgi;
  uwsgi_temp_path /nginx_tmp/uwsgi;

server {
    listen      443 ssl; # Port HTTPS
    server_name planetsmining.fr; # Nom de domaine concerné par ce bloc de config

    ssl_certificate /etc/letsencrypt/live/planetsmining.fr/fullchain.pem; # Localisation de certifcat 
    ssl_certificate_key /etc/letsencrypt/live/planetsmining.fr/privkey.pem; # Localisation de la clef
    ssl_protocols TLSv1.2; # Protocole SSL/TLS autorisé 
    ssl_prefer_server_ciphers on; # Activation du chiffrement coté serveur
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH'; # Type de chiffrement 
    
       server_name express;

        access_log /dev/stdout;#log stdout peut etre => file
        error_log /dev/stdout info;#log stdout peut etre => file

        root /node_project/app;

        include /etc/nginx/mime.types;

        charset utf-8;

        #Max upload size

        client_max_body_size 1M;   # adjust to taste



        # express project's static files
        # in fine le bundle js c est ici
#        location /static { 
#            alias /project-hesabu/static;
#            # On active la compression
#            gzip  on;
#            gzip_http_version 1.0;
#            gzip_vary on;
#            gzip_comp_level 6;
#            gzip_proxied any;
#            gzip_types text/plain text/css application/
#json application/x-javascript text/xml application/xml 
#application/xml+rss text/javascript;
#            gzip_buffers 16 8k;
#
#            # Sauf pour les vieux nav
#            gzip_disable ~@~\MSIE [1-6].(?!.*SV1)~@~];
#
#            # On dit au navigateur de le mettre en cache 
#pour 10 jours. Faites gaffe,
#            # mettez un param dans les url de vos balises 
#script/link qui change
#            # à chaque version du fichier, sinon vous ne 
#pourrez pas mettre à jour
#            # vos fichiers. pour le dev -1 indique no cache
#            expires modified -1;#+10d; 
#
#        } 


        # envoie la requete a express s ce n'est pas du static ou du media ou du socket
        location / {
            proxy_pass http://express:3000;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

    


    # websocket independant server
    # le port defini en listen ici est celui du js du client
    #il faudra penser a changer le 127.0.0.1 en hesabu.fr dans la version prod bien sur
    # mettre l'adresse dans docker et port used in docker dans upstream websocket et le repeter dans le proxy pass su server
    
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
 
    upstream websocket {
        server express:3000;
    }

    server {
        server_name 127.0.0.1;
        location / {
            #include proxy_params;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_pass http://express:3000;
        }
    }

}

    
    server {
        listen 80;
        server_name tls.example.com; # Nom de domaine concerné par ce bloc de config
    return 301 https://$host$request_uri; # Redirection automatique sur le HTTPS
    }



}